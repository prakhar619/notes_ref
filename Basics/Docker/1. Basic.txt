 Docker
    Software for Containerisation/virtual environment with no extra dependency

Difference between Docker and VM 
    Docker is lightweight
    Docker cant support everthing (needs wsl, windows)
    Mostly linux base image support
    different level of abstraction (application vs os kernel)

Image
    Virtual image (like OS image) which can be run/booted
    Contains all dependencies

Container 
    A running image is called container

Dockerfile 
    A file which stores instructions regarding your image,
        like which image(layer) you are building on top of,

    You can set instructions for copy your files into image in this file 
    Also set port, commands to launch when image is run.

    Example
    #############################################
    #comment
    FROM python:3.8                 #get image either locally or from Docker Hub

    WORKDIR /app                    #create app folder inside image if not present and set it as active dir

    COPY requirements.txt .         #copy and install dependencies first (including jupyter if needed)
    
    RUN python -m pip install --upgrade pip     #"RUN" runs when image is create/build time only
    RUN pip install -r requirements.txt         #creates a new layer in the image

    EXPOSE 8888                                 #expose Jupyter port

    COPY . .                                    #copy all project files

    ENV NAME=World                              #set environment layer

    CMD ["jupyter", "notebook", "--ip=0.0.0.0", "--port=8888", "--no-browser", "--allow-root"]   #CMD is run whenever image/container run

    ###########################################

Layer
    Every Docker image is a layer, you can build anything on previous layer
    Like alpine->nodejs->yourImage

Build 
    Build meaning building an image from your file and Dockerfile configuration

Docker Network 
    Each container (running) is present inside a network (docker network) and local computer can 
        connect/communicate with it using port.
    2 Container does not need to port to connect as they are inside the same network.

Docker Hub  
    A publicly available Docker images containing repository

Port 
    A container running might interact with local machine using host.
    TBH a application inside a container might interact with local machine using container port
    Need mapping of local port to container port during running the container 

